{"version":3,"sources":["./src/app/main/pages/favourites/favourites.component.html","./src/app/main/pages/favourites/favourites.component.ts","./src/app/main/components/search-input/search-input.component.ts","./src/app/main/components/search-input/search-input.component.html","./src/app/shared/guards/check-login.guard.ts","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/login/login.service.ts","./src/app/main/main.module.ts","./src/app/app.module.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/main/pages/home/home.component.html","./src/app/main/pages/home/home.component.ts","./src/app/main/pages/movie-description/movie-description.component.html","./src/app/main/pages/movie-description/movie-description.component.ts","./src/app/services/films/films.service.ts","./src/app/app-routing.module.ts","./src/app/main/pages/login/login.component.ts","./src/app/main/pages/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<h2 class=\"favourite-title\">Your favourite Film list</h2>\n<div class=\"film-container\">\n  <div class=\"card\" *ngFor=\"let film of favouriteFilms\">\n    <h2 class=\"card__title\">{{film.Title}}</h2>\n\n    <img class=\"card__poster\" *ngIf=\"film.Poster !== 'N/A'\" [src]=\"film.Poster\" [alt]=\"film.Title\">\n\n    <h3 class=\"poster\" *ngIf=\"film.Poster === 'N/A'\">Poster not found! :(</h3>\n\n    <div class=\"card__buttons\">\n      <a class=\"card__buttons-link\" [routerLink]=\"['/movie', film.imdbID]\" >Description</a>\n      <a class=\"card__buttons-link button--add\" (click)=\"addFilmToFav(film.imdbID)\" *ngIf=\"checkFilmInFavourites(film.imdbID)\">Add to Fav</a>\n      <a class=\"card__buttons-link button--remove\" (click)=\"removeFilmToFav(film.imdbID)\" *ngIf=\"!checkFilmInFavourites(film.imdbID)\">Remove to Fav</a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { FilmsService } from 'src/app/services/films/films.service';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n@Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.css']\n})\nexport class FavouritesComponent implements OnInit {\n\n  title               : string  = '';\n  noResults           : boolean = true;\n  errorFeedback       : string  = 'Please, write title to search...';\n  favouriteFilmsResult: any[]   = [];\n  favouriteFilms      : any[]   = [];\n  userData            : any;\n  userSessionData     : any;\n  indexUser           : any;\n\n  constructor(\n    private _spinner    : NgxSpinnerService,\n    private _loginSvc   : LoginService,\n    private _filmsSvc   : FilmsService\n  ) { }\n\n  ngOnInit(): void {\n    this.setFavouriteFilms();\n  }\n\n  setFavouriteFilms = () => {\n    this._spinner.show();\n    this.getFavouriteFilms();\n    this.favouriteFilmsResult.forEach(film => {\n      this._filmsSvc.getFilmDescription(film).subscribe(filmData => {\n        this.favouriteFilms.push(filmData);\n        this._spinner.hide();\n      }, error => {\n        this._spinner.hide();\n      })\n    })\n  }\n\n  getFavouriteFilms = () => {\n    this.setUserData();\n    this.favouriteFilmsResult = this.userData[this.indexUser].favourites;\n  }\n\n  setUserData = (): void => {\n    this.userData = this._filmsSvc.getUsers();\n    this.userSessionData = this._filmsSvc.getSessionUsers();\n    this.indexUser = this.userData.findIndex((element: any) => {\n      if (element.username === this.userSessionData) return element.username;\n    });\n  }\n\n  addFilmToFav = (id: string) => {\n    this.setUserData();\n    this.userData[this.indexUser].favourites.push(id);\n    this._loginSvc.saveUser(this.userData);\n  }\n\n  removeFilmToFav = (id: string) => {\n    this.setUserData();\n    const filmIndex: any = this.userData[this.indexUser].favourites.indexOf(id);\n    (this.userData[this.indexUser].favourites.includes(id)) ?\n    this.userData[this.indexUser].favourites.splice(filmIndex, 1) :\n    this.userData[this.indexUser].favourites.push(id);\n    this._loginSvc.saveUser(this.userData);\n    this.favouriteFilms = [];\n    this.setFavouriteFilms();\n  }\n\n  checkFilmInFavourites = (id: string) => {\n    this.setUserData();\n    if (this.userData[this.indexUser].favourites.includes(id)) { return false }\n    else { return true }\n  }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.css']\n})\nexport class SearchInputComponent implements OnInit {\n  @Output() onEnter: EventEmitter<string> = new EventEmitter();\n\n  title: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  search() {\n    this.onEnter.emit(this.title);\n  }\n\n\n}\n","<section class=\"search-box\">\n  <form class=\"search-box__field\" (ngSubmit)=\"search()\" autocomplete=\"off\">\n    <input\n      class=\"search-box__input\"\n      type=\"text\"\n      name=\"title\"\n      [(ngModel)]=\"title\"\n      placeholder=\"Search title ...\" />\n      <button class=\"submit-button\">\n        <span class=\"material-icons search-button\">search</span>\n      </button>\n  </form>\n</section>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckLoginGuard implements CanActivate {\n\n  constructor (\n    private _authSvc: AuthService,\n    private _router : Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      if (!this._authSvc.checkSession) {\n        this._router.navigate(['/login'])\n        return false;\n      }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  get checkSession() {\n    return sessionStorage.getItem('userSession');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  show    : boolean = false;\n  isLogged: boolean = false;\n\n\n\n  constructor(\n    private _router   : Router,\n    private _loginSvc : LoginService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  showMenu = () => {\n    this.show = !this.show;\n  }\n\n  logout = () => {\n    this._loginSvc.removeSession();\n    this._router.navigate(['login'])\n  }\n\n\n}\n","<nav class=\"menu\">\n  <h1 class=\"logo\">FilmApp</h1>\n  <div class=\"menu__box-button\" (click)=\"showMenu()\">\n    <div class=\"menu__bar\" [ngClass]=\"{'menu__bar--active': show}\"></div>\n    <div class=\"menu__bar\" [ngClass]=\"{'menu__bar--active': show}\"></div>\n    <div class=\"menu__bar\" [ngClass]=\"{'menu__bar--active': show}\"></div>\n  </div>\n  <ul class=\"menu__list\" [ngClass]=\"{'menu__list--active': show}\">\n    <li\n      (click)=\"showMenu()\"\n      class=\"menu__list-item\"\n      routerLink=\"home\"\n    >Home</li>\n    <li\n      (click)=\"showMenu()\"\n      class=\"menu__list-item\"\n      routerLink=\"favourites\"\n    >Favourites</li>\n    <li\n      (click)=\"showMenu()\"\n      (click)=\"logout()\"\n      class=\"menu__list-item\"\n      routerLink=\"logout\"\n    >Logout</li>\n  </ul>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppRoutingModule } from '../app-routing.module';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent, FooterComponent],\n  exports: [\n    NavbarComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule\n  ]\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'filmAppAngular';\n}\n","<ngx-spinner\nbdColor=\"rgba(51,51,51,0.8)\"\nsize=\"medium\"\ncolor=\"#fff\"\ntype=\"pacman\"\n></ngx-spinner>\n\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  usersData: any = [];\n\n  constructor() { }\n\n  getUsersData = () => {\n    const data: any = localStorage.getItem('user');\n    this.usersData = JSON.parse(data);\n    return this.usersData;\n  }\n\n  setTokenSession = (sessionUser: string): void => {\n    sessionStorage.setItem('userSession', sessionUser);\n  }\n\n  checkSession = () => {\n    sessionStorage.getItem('userSession') === null ?\n    false :\n    true;\n  }\n\n  saveUser = ( newUser: any): void => {\n    localStorage.setItem('user', JSON.stringify(newUser));\n  }\n\n  removeSession = () => {\n    sessionStorage.removeItem('userSession');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { FavouritesComponent } from './pages/favourites/favourites.component';\nimport { SearchInputComponent } from './components/search-input/search-input.component';\nimport { MovieDescriptionComponent } from './pages/movie-description/movie-description.component';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    HomeComponent,\n    FavouritesComponent,\n    SearchInputComponent,\n    MovieDescriptionComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule\n  ]\n})\nexport class MainModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { MainModule } from './main/main.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { CheckLoginGuard } from './shared/guards/check-login.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule,\n    NgxSpinnerModule,\n    MainModule\n  ],\n  providers: [CheckLoginGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n  <section class=\"footer__link\">\n    <p class=\"footer__link-text\">Visit my website <a class=\"footer__link-item\" href=\"https://manulopezayora.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">ManuLopezAyora</a></p>\n  </section>\n  <section class=\"footer__copy\">\n    <small>Manu Lopez Ayora 2021 &copy;</small>\n  </section>\n</footer>\n","<app-search-input (onEnter)=\"search($event)\"></app-search-input>\n\n<p class=\"error-feedback\" *ngIf=\"noResults\">{{ errorFeedback }}</p>\n\n<div class=\"film-container\">\n  <div class=\"card\" *ngFor=\"let film of filmResults\">\n    <h2 class=\"card__title\">{{film.Title}}</h2>\n    <img class=\"card__poster\" *ngIf=\"film.Poster !== 'N/A'\" [src]=\"film.Poster\" [alt]=\"film.Title\">\n    <h3 class=\"poster\" *ngIf=\"film.Poster === 'N/A'\">Poster not found! :(</h3>\n    <div class=\"card__buttons\">\n      <a class=\"card__buttons-link\" [routerLink]=\"['/movie', film.imdbID]\" >Description</a>\n      <a class=\"card__buttons-link button--add\" (click)=\"addFilmToFav(film.imdbID)\" *ngIf=\"checkFilmInFavourites(film.imdbID)\">Add to Fav</a>\n      <a class=\"card__buttons-link button--remove\" (click)=\"removeFilmToFav(film.imdbID)\" *ngIf=\"!checkFilmInFavourites(film.imdbID)\">Remove to Fav</a>\n    </div>\n  </div>\n</div>\n\n<!-- TODO: Lazy load para la paginación -->\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { FilmsService } from '../../../services/films/films.service';\nimport { LoginService } from '../../../services/login/login.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  title           : string  = '';\n  noResults       : boolean = true;\n  errorFeedback   : string  = 'Please, write title to search...';\n  filmResults     : any[]   = [];\n  userData        : any;\n  userSessionData : any;\n  indexUser       : any;\n\n  constructor(\n    private _spinner  : NgxSpinnerService,\n    private _loginSvc : LoginService,\n    private _filmsSvc  : FilmsService\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  search(title: string) {\n    if (title.trim() === '') return;\n\n    this._spinner.show();\n      this.title = title;\n      this._filmsSvc.getResults(title).subscribe(\n        (films: any) => {\n          setTimeout(() => {\n            if (films.Response === 'True') {\n              this.filmResults = films.Search;\n              this.noResults = false;\n              this._spinner.hide();\n            } else if (films.Response === 'False' && films.Error === 'Movie not found!') {\n              this.noResults = true;\n              this.errorFeedback = films.Error;\n              this.filmResults = [];\n              this._spinner.hide();\n            } else if (films.Response === 'False' && films.Error === 'Too many results.') {\n              this.noResults = true;\n              this.errorFeedback = films.Error;\n              this.filmResults = [];\n              this._spinner.hide();\n            }\n          }, 2000);\n        },\n        (error) => {\n          this.noResults = true;\n          this._spinner.hide();\n        }\n      )\n  }\n\n  setUserData = (): void => {\n    this.userData = this._filmsSvc.getUsers();\n    this.userSessionData = this._filmsSvc.getSessionUsers();\n    this.indexUser = this.userData.findIndex((element: any) => {\n      if (element.username === this.userSessionData) return element.username;\n    });\n  }\n\n  addFilmToFav = (id: string) => {\n    this.setUserData();\n    this.userData[this.indexUser].favourites.push(id);\n    this._loginSvc.saveUser(this.userData);\n  }\n\n  removeFilmToFav = (id: string) => {\n    this.setUserData();\n    const filmIndex: any = this.userData[this.indexUser].favourites.indexOf(id);\n    (this.userData[this.indexUser].favourites.includes(id)) ?\n    this.userData[this.indexUser].favourites.splice(filmIndex, 1) :\n    this.userData[this.indexUser].favourites.push(id);\n    this._loginSvc.saveUser(this.userData);\n  }\n\n  checkFilmInFavourites = (id: string) => {\n    this.setUserData();\n    if (this.userData[this.indexUser].favourites.includes(id)) { return false }\n    else { return true }\n  }\n}\n","<div class=\"film-container\" *ngIf=\"filmDescription\">\n  <div class=\"card\">\n    <section class=\"first\">\n      <h1 class=\"card__title\">{{ filmDescription.Title }}</h1>\n      <img class=\"card__poster\" [src]=\"filmDescription.Poster\" [alt]=\"filmDescription.Title\">\n    </section>\n    <section class=\"second\">\n      <h2 class=\"card__sub-title\">Description</h2>\n\n      <p class=\"card__description-text\">\n        <strong>Director:</strong>\n        {{ filmDescription.Director }}\n      </p>\n\n      <p class=\"card__description-text\">\n        <strong>Genre:</strong>\n        {{ filmDescription.Genre }}\n      </p>\n\n      <p class=\"card__description-text\">\n        <strong>Rated:</strong>\n        {{ filmDescription.Rated }}\n      </p>\n\n      <p class=\"card__description-text\">\n        <strong>Actors:</strong>\n        {{ filmDescription.Actors }}\n      </p>\n\n      <p class=\"card__description-text\">\n        <strong>Writer:</strong>\n        {{ filmDescription.Writer }}\n      </p>\n\n      <p class=\"card__description-text\">\n        <strong>Plot:</strong>\n        {{ filmDescription.Plot }}\n      </p>\n\n      <div class=\"card__buttons\">\n        <a class=\"card__butons-link\" routerLink=\"/home\">Back to search</a>\n        <a class=\"card__butons-link button--add\" (click)=\"addFilmToFav(filmDescription.imdbID)\" *ngIf=\"checkFilmInFavourites(filmDescription.imdbID)\">Add to Fav</a>\n        <a class=\"card__butons-link button--remove\" (click)=\"removeFilmToFav(filmDescription.imdbID)\" *ngIf=\"!checkFilmInFavourites(filmDescription.imdbID)\">Remove to Fav</a>\n      </div>\n    </section>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoginService } from 'src/app/services/login/login.service';\nimport { FilmsService } from '../../../services/films/films.service';\n\n\n@Component({\n  selector: 'app-movie-description',\n  templateUrl: './movie-description.component.html',\n  styleUrls: ['./movie-description.component.css']\n})\nexport class MovieDescriptionComponent implements OnInit {\n\n  filmDescription : any;\n  userData        : any;\n  userSessionData : any;\n  indexUser       : any;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _filmsSvc: FilmsService,\n    private _loginSvc : LoginService,\n    private _spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this._spinner.show();\n    this._activatedRoute.params.subscribe(({ id }) => {\n      console.log(id)\n      this._filmsSvc.getFilmDescription(id).subscribe(film => {\n        this.filmDescription = film;\n        this._spinner.hide();\n      })\n    })\n  }\n\n  setUserData = (): void => {\n    this.userData = this._filmsSvc.getUsers();\n    this.userSessionData = this._filmsSvc.getSessionUsers();\n    this.indexUser = this.userData.findIndex((element: any) => {\n      if (element.username === this.userSessionData) return element.username;\n    });\n  }\n\n  addFilmToFav = (id: string) => {\n    this.setUserData();\n    this.userData[this.indexUser].favourites.push(id);\n    this._loginSvc.saveUser(this.userData);\n  }\n\n  removeFilmToFav = (id: string) => {\n    this.setUserData();\n    const filmIndex: any = this.userData[this.indexUser].favourites.indexOf(id);\n    (this.userData[this.indexUser].favourites.includes(id)) ?\n    this.userData[this.indexUser].favourites.splice(filmIndex, 1) :\n    this.userData[this.indexUser].favourites.push(id);\n    this._loginSvc.saveUser(this.userData);\n  }\n\n  checkFilmInFavourites = (id: string) => {\n    this.setUserData();\n    if (this.userData[this.indexUser].favourites.includes(id)) { return false }\n    else { return true }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Result } from 'src/app/main/interfaces/films.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmsService {\n\n  private _baseUrl: string = 'http://www.omdbapi.com/?apikey=f9c9cdc8';\n\n  constructor(private _http: HttpClient) { }\n\n  getResults = (title: string): Observable<any> => {\n    const url = `${this._baseUrl}&s=${title}`;\n    return this._http.get<Result[]>(url);\n  }\n\n  getFilmDescription = (id: string): Observable<any> => {\n    const url = `${this._baseUrl}&i=${id}`;\n    return this._http.get<Result[]>(url);\n  }\n\n  getUsers = () => {\n    const data: any = localStorage.getItem('user');\n    return JSON.parse(data)\n  }\n\n  getSessionUsers = () => {\n    return sessionStorage.getItem('userSession');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CheckLoginGuard } from './shared/guards/check-login.guard';\n\nimport { LoginComponent } from './main/pages/login/login.component';\nimport { HomeComponent } from './main/pages/home/home.component';\nimport { FavouritesComponent } from './main/pages/favourites/favourites.component';\nimport { MovieDescriptionComponent } from './main/pages/movie-description/movie-description.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent, pathMatch: 'full'},\n  {path: 'home', component: HomeComponent, canActivate: [CheckLoginGuard]},\n  {path: 'movie/:id', component: MovieDescriptionComponent, canActivate: [CheckLoginGuard]},\n  {path: 'favourites', component: FavouritesComponent, canActivate: [CheckLoginGuard]},\n  {path: '**', redirectTo: '/home'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm = this._formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required]],\n    favourites: [[]]\n  });\n\n  newUser  : any     = [];\n  usersData: any     = [];\n  isLogged : boolean = false;\n\n\n  constructor(\n    private _formBuilder : FormBuilder,\n    private _router      : Router,\n    private _loginService: LoginService\n    ) { }\n\n    ngOnInit(): void {\n      this.checkSession();\n      this.usersData = this._loginService.getUsersData();\n    }\n\n  onSubmit = (): void => {\n    this.newUser = this.loginForm.value;\n\n    if(this._loginService.getUsersData() === null){\n      this._loginService.setTokenSession(this.loginForm.get('username')?.value)\n      this._loginService.saveUser([this.newUser]);\n    } else {\n      const data: any = this._loginService.getUsersData();\n      const username = data.findIndex((user: any) => user.username === this.loginForm.get('username')?.value)\n      const password = data.findIndex((user: any) => user.password === this.loginForm.get('password')?.value)\n      if (username !== -1 && password !== -1) {\n        this._loginService.setTokenSession(this.loginForm.get('username')?.value);\n        this._router.navigate(['home']);\n      } else {\n        this._loginService.setTokenSession(this.loginForm.get('username')?.value);\n        this.usersData.push(this.newUser);\n        this._loginService.saveUser(this.usersData);\n        this._router.navigate(['home']);\n      }\n    }\n  }\n\n  fieldIsValid = (name: string): boolean => {\n    const fieldName: any = this.loginForm.get(name);\n    return (fieldName.invalid && fieldName.touched);\n  }\n\n  labelAnimation = (name: string): boolean => {\n    const fieldName: any = this.loginForm.get(name);\n    return (!fieldName.pristine && fieldName.value);\n  }\n\n  checkSession = () => {\n    sessionStorage.getItem('userSession') === null ?\n    this.isLogged = false :\n    this.isLogged = true;\n    this.isLogged === true && this._router.navigate(['home'])\n  }\n\n}\n","<div class=\"form-container\">\n  <form class=\"form\" (ngSubmit)=\"onSubmit()\" novalidate [formGroup]=\"loginForm\">\n    <div class=\"form__field\">\n      <input\n        class=\"form__input\"\n        type=\"text\"\n        formControlName=\"username\"\n        [ngClass]=\"{'input-invalid': fieldIsValid('username')}\"\n      />\n      <label\n        class=\"form__input-label\"\n        [ngClass]=\"{\n          'label-invalid': fieldIsValid('username'),\n          'form__input-active': labelAnimation('username')\n        }\"\n      >Username</label>\n    </div>\n    <div class=\"form__field\">\n      <input\n        class=\"form__input\"\n        type=\"password\"\n        formControlName=\"password\"\n        [ngClass]=\"{'input-invalid': fieldIsValid('password')}\"\n      />\n      <label\n        class=\"form__input-label\"\n        [ngClass]=\"{\n        'label-invalid': fieldIsValid('password'),\n        'form__input-active': labelAnimation('password')\n      }\">\n        Password\n      </label>\n    </div>\n\n    <button type=\"submit\" class=\"form__submit-button\" [disabled]=\"loginForm.invalid\">Log In</button>\n\n    <div class=\"form__feedback\">\n      <p class=\"form__feedback-text\">\n      Please enter your username and password. If the user does not exist, a new user will be generated.\n      </p>\n      <span\n        class=\"form__feedback-text-float\"\n        *ngIf=\"loginForm.get('username')?.errors?.minlength\"\n      >Username must be longer than {{ loginForm.get('username')?.errors?.minlength.requiredLength }} characters.</span>\n    </div>\n  </form>\n</div>\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}